<!DOCTYPE html>
<html>
<head>
    <title>–î–∞—Ä—Ç—Å - 5 –±—Ä–æ—Å–∫–æ–≤ —Å –∏—Å—Ç–æ—Ä–∏–µ–π</title>
    <script src="https://cdn.jsdelivr.net/npm/@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            margin: 0;
            background-color: #f5f5f5;
            text-align: center;
        }
        
        .main-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 800px;
            padding: 20px;
            box-sizing: border-box;
            position: relative;
        }
        
        .animation-wrapper {
            position: relative;
            width: 300px;
            height: 300px;
            margin: 0 auto 30px;
        }
        
        .throw-history {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 120px;
            display: flex;
            flex-direction: column-reverse;
            align-items: center;
            gap: 5px;
        }
        
        .throw-preview {
            width: 60px;
            height: 60px;
            transition: all 0.3s ease;
        }
        
        .points-label {
            font-size: 12px;
            color: #666;
            margin-top: -8px;
            font-weight: bold;
        }
        
        lottie-player {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        
        .score-display {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
            color: #333;
        }
        
        .throws-counter {
            font-size: 18px;
            margin-bottom: 20px;
            color: #666;
        }
        
        .final-result {
            font-size: 32px;
            font-weight: bold;
            color: #4285f4;
            margin: 20px 0;
            display: none;
        }
        
        .buttons-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
            align-items: center;
            width: 100%;
            max-width: 300px;
        }
        
        .dart-button {
            padding: 14px 28px;
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            width: 100%;
            text-align: center;
        }
        
        #throw-button {
            background: linear-gradient(135deg, #4285f4, #34a853);
        }
        
        #throw-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0,0,0,0.15);
        }
        
        #restart-button {
            background: #f4b400;
            display: none;
        }
        
        #restart-button:hover {
            background: #db9b00;
        }
        
        .title {
            color: #333;
            margin-bottom: 30px;
            font-size: 32px;
        }
        
        .bullseye-preview { border: 2px solid #34a853; }
        .miss-preview { opacity: 0.7; }
    </style>
</head>
<body>
    <div class="main-container">
        <h1 class="title">üéØ –î–∞—Ä—Ç—Å - 5 –±—Ä–æ—Å–∫–æ–≤</h1>
        
        <div class="score-display" id="score">
            –û—á–∫–∏: 0
        </div>
        
        <div class="throws-counter" id="throws-counter">
            –ë—Ä–æ—Å–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: 5
        </div>
        
        <div class="final-result" id="final-result">
            –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <span id="final-score">0</span> –æ—á–∫–æ–≤!
        </div>
        
        <div class="animation-wrapper">
            <!-- –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏—è -->
            <lottie-player 
                id="aim-animation"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-aimloop.json"
                background="transparent"
                speed="1"
                loop
                autoplay>
            </lottie-player>
            
            <!-- –ê–Ω–∏–º–∞—Ü–∏–∏ –±—Ä–æ—Å–∫–∞ -->
            <lottie-player 
                class="throw-animation"
                data-id="miss"
                data-points="0"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-miss-2.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
            
            <lottie-player 
                class="throw-animation"
                data-id="bullseye"
                data-points="10"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-bullseye.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
            
            <lottie-player 
                class="throw-animation"
                data-id="score2"
                data-points="5"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-2.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
            
            <lottie-player 
                class="throw-animation"
                data-id="score3"
                data-points="4"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-3.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
            
            <lottie-player 
                class="throw-animation"
                data-id="score4"
                data-points="2"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-4.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
            
            <lottie-player 
                class="throw-animation"
                data-id="score5"
                data-points="1"
                src="https://cdn.jsdelivr.net/gh/Romwayl/svg-animations@main/darts-v4-5.json"
                background="transparent"
                speed="1"
                style="display: none;">
            </lottie-player>
        </div>
        
        <div class="throw-history" id="throw-history"></div>
        
        <div class="buttons-container">
            <button id="throw-button" class="dart-button">
                –ë—Ä–æ—Å–∏—Ç—å –¥—Ä–æ—Ç–∏–∫
            </button>
            <button id="restart-button" class="dart-button">
                –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
        </div>
    </div>

    <script>
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π
        const probabilities = {
            'miss': 0.25,     // 25% chance (0 –æ—á–∫–æ–≤)
            'bullseye': 0.1,  // 10% chance (10 –æ—á–∫–æ–≤)
            'score2': 0.15,   // 15% chance (5 –æ—á–∫–æ–≤)
            'score3': 0.2,    // 20% chance (4 –æ—á–∫–∞)
            'score4': 0.2,    // 20% chance (2 –æ—á–∫–∞)
            'score5': 0.1     // 10% chance (1 –æ—á–∫–æ)
        };

        // –≠–ª–µ–º–µ–Ω—Ç—ã
        const aimAnimation = document.getElementById('aim-animation');
        const throwButton = document.getElementById('throw-button');
        const restartButton = document.getElementById('restart-button');
        const scoreDisplay = document.getElementById('score');
        const throwsCounter = document.getElementById('throws-counter');
        const finalResult = document.getElementById('final-result');
        const finalScore = document.getElementById('final-score');
        const throwHistory = document.getElementById('throw-history');

        // –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        let totalScore = 0;
        let throwsLeft = 5;
        let isThrowing = false;

        // –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
        function getRandomAnimation() {
            const random = Math.random();
            let cumulativeProbability = 0;
            
            for (const [id, prob] of Object.entries(probabilities)) {
                cumulativeProbability += prob;
                if (random <= cumulativeProbability) {
                    return id;
                }
            }
            return 'miss';
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–∞—Ç—é—Ä—ã –±—Ä–æ—Å–∫–∞
        function createThrowPreview(animId, points) {
            const previewContainer = document.createElement('div');
            previewContainer.style.display = 'flex';
            previewContainer.style.flexDirection = 'column';
            previewContainer.style.alignItems = 'center';
            
            const preview = document.createElement('lottie-player');
            preview.className = `throw-preview ${animId}-preview`;
            preview.setAttribute('background', 'transparent');
            preview.setAttribute('speed', '1');
            preview.setAttribute('loop', 'false');
            
            // –û—Å–æ–±—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if (animId === 'bullseye') preview.classList.add('bullseye-preview');
            if (animId === 'miss') preview.classList.add('miss-preview');
            
            const pointsLabel = document.createElement('div');
            pointsLabel.className = 'points-label';
            pointsLabel.textContent = points > 0 ? `+${points} üéØ` : '–ü—Ä–æ–º–∞—Ö';
            pointsLabel.style.color = points > 0 ? '#34a853' : '#ea4335';
            
            previewContainer.appendChild(preview);
            previewContainer.appendChild(pointsLabel);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
            throwHistory.prepend(previewContainer);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            preview.load(document.querySelector(`.throw-animation[data-id="${animId}"]`).src)
                .then(() => {
                    preview.play();
                    preview.addEventListener('complete', () => preview.pause());
                });
            
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é 5 –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –±—Ä–æ—Å–∫–∞–º–∏
            if (throwHistory.children.length > 10) {
                throwHistory.removeChild(throwHistory.lastChild);
                throwHistory.removeChild(throwHistory.lastChild);
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        function updateUI() {
            scoreDisplay.textContent = `–û—á–∫–∏: ${totalScore}`;
            throwsCounter.textContent = `–ë—Ä–æ—Å–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: ${throwsLeft}`;
        }

        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
        function endGame() {
            finalScore.textContent = totalScore;
            finalResult.style.display = 'block';
            throwButton.style.display = 'none';
            restartButton.style.display = 'block';
        }

        // –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        function startNewGame() {
            // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            throwHistory.innerHTML = '';
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç
            totalScore = 0;
            throwsLeft = 5;
            updateUI();
            finalResult.style.display = 'none';
            throwButton.style.display = 'block';
            restartButton.style.display = 'none';
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –±—Ä–æ—Å–∫–∞
            document.querySelectorAll('.throw-animation').forEach(anim => {
                anim.style.display = 'none';
                anim.stop();
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
            aimAnimation.style.display = 'block';
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—Ä–æ—Å–∫–∞
        throwButton.addEventListener('click', async () => {
            if (isThrowing || throwsLeft <= 0) return;
            isThrowing = true;
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            throwButton.disabled = true;
            
            // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
            aimAnimation.style.display = 'none';
            
            // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
            const animId = getRandomAnimation();
            const throwAnim = document.querySelector(`.throw-animation[data-id="${animId}"]`);
            const points = parseInt(throwAnim.dataset.points);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –±—Ä–æ—Å–∫–∞
            throwAnim.style.display = 'block';
            throwAnim.play();
            
            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
            await new Promise(resolve => {
                throwAnim.addEventListener('complete', () => {
                    throwAnim.pause();
                    resolve();
                }, { once: true });
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç
            totalScore += points;
            throwsLeft--;
            updateUI();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
            createThrowPreview(animId, points);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã
            if (throwsLeft <= 0) {
                endGame();
            } else {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏—Ü–µ–ª–∏–≤–∞–Ω–∏–µ
                setTimeout(() => {
                    throwAnim.style.display = 'none';
                    aimAnimation.style.display = 'block';
                }, 500);
            }
            
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            throwButton.disabled = false;
            isThrowing = false;
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
        restartButton.addEventListener('click', startNewGame);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
        startNewGame();
    </script>
</body>
</html>
